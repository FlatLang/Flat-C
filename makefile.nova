slash=/
E =
bslash=\$(E)
colon=\:
comma=,
space= 

home = $(NOVA_COMPILE_HOME)
stdlib = $(NOVA_STDLIB_LOCATION)
IDIR=-I$(home) -I$(home)/include/gc -I$(home)/include -I$(home)/../Misc -I$(home)/include/nova_mysql -I$(home)/include/nova_openssl -I$(stdlib) -I.
CFLAGS=

CC = $(NOVA_CC)

LDIRS=-L$(home)/../Misc/example/bin

LIBS = -lcrypto

ifndef NOVA_CC
	CC=gcc
endif

ifeq ($(CC), gcc)
	ifdef LINE_NUMBERS
		CFLAGS += -g
	endif
	ifdef SMALL_BIN
		CFLAGS += -Os -s
	else ifndef NO_OPTIMIZE
		CFLAGS += -O2
	endif
	
	CFLAGS += -pipe -Wl,--enable-stdcall-fixup
endif

ifndef NO_GC
	CFLAGS += -DUSE_GC
	LIBS += -lgc
endif
ifeq ($(OS), Windows_NT)
	CFLAGS += -mwindows -mconsole
	LIBS += -lws2_32 -lmysql -lpcre2-8-0 -limagehlp
else
	ifeq ($(shell uname), Linux)
		LDIRS += -L/usr/include/openssl
		LIBS += -lm -ldl -lc -lmysqlclient -lpcre2-8
	endif
	
	LIBS += -lpthread
endif

ifndef NO_OPTIMIZE
	ifdef SMALL_BIN
		CFLAGS += -ffast-math
	else
		CFLAGS += -march=native -fomit-frame-pointer
	endif
endif

EXEC_PATH = $(home)/../Misc/example/bin/Executable.exe

EXTRADEPS = VTableDeclarations.h\
			NovaClassData.h\
			NovaNativeInterface.h\
			InterfaceVTable.h\
			$(home)/include/Nova.h\
			$(home)/include/NovaExceptionHandling.h

EXTRAOBJ = VTableDeclarations.o\
			NovaClassData.o\
			NovaNativeInterface.o\
			$(home)/include/Nova.o\
			$(home)/include/NovaExceptionHandling.o

DEPS = $(patsubst %,%,$(NOVA_DEPS) $(EXTRADEPS))

QOBJ = $(patsubst %\,%,$(patsubst %,$(subst $(space),$(bslash)$(space),%),$(NOVA_OBJ)))
NOOBJ = $(EXTRAOBJ) $(NOVA_OBJ)
QOOBJ = $(patsubst %\,%,$(patsubst %,$(subst $(space),$(bslash)$(space),%),$(EXTRAOBJ))) $(QOBJ)
ALLOBJ = $(EXTRAOBJ) $(NOVA_OBJ)
QOGCH = $(patsubst %\,%,$(patsubst %,$(subst $(space),$(bslash)$(space),%),$(ALLOBJ:.o=.gch)))
OBJ = $(subst :,$(colon),$(EXTRAOBJ)) $(NOVA_OBJ)
GENERATED_FILES = $(QOOBJ) $(QOGCH)

ifdef COMPILE_C_FILES
	COMPILE_ITEMS = $(ALLOBJ:.o=.c)
else
	COMPILE_ITEMS = $(ALLOBJ)
endif

%.gch: %.h
	$(CC) $(CFLAGS) $(IDIR) -c -o $@ $<

%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) $(IDIR) -c -o $@ $< $(LDIRS) $(LIBS)

.PHONY: install link headers clean

install: $(COMPILE_ITEMS)
	@echo "Linking program"
	$(CC) $(CFLAGS) $(IDIR) $^ -o $(EXEC_PATH) $(LDIRS) $(LIBS)

link:
	@echo "Linking program"
	$(CC) $(CFLAGS) $(IDIR) $(COMPILE_ITEMS) -o $(EXEC_PATH) $(LDIRS) $(LIBS)

headers: $(OBJ:.o=.gch)
	echo done headers

clean:
#ifeq ($(OS), Windows_NT)
#	$(foreach f, $(GENERATED_FILES), echo $(f);)
#	$(shell for %%a in ($(GENERATED_FILES)) do if exist "%%a" del "%%a")
#	@echo "Deleting all *.o and *.gch files"
#	@del /S $(ODIR)/*.o $(ODIR)/*.gch
#else
	rm -f $(GENERATED_FILES)
#endif