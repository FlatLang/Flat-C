slash=/
E =
bslash=\$(E)
colon=\:
comma=,
space= 

home = $(NOVA_COMPILE_HOME)
stdlib = $(NOVA_STDLIB_LOCATION)
IDIR=-I$(home) -I$(home)/include/gc -I$(home)/include -I$(home)/../Misc -I$(home)/include/nova_mysql -I$(home)/include/nova_openssl -I$(stdlib) -I.
CFLAGS=$(IDIR)

CC = $(NOVA_CC)

FODIR=.
ODIR=.
LDIRS=-L$(home)/../Misc/example/bin

LIBS = -lcrypto

ifndef NOVA_CC
	CC=gcc
endif

ifeq ($(CC), gcc)
	CFLAGS += $(space)-pipe -Wl,--enable-stdcall-fixup
	
	ifdef LINE_NUMBERS
		CFLAGS += $(space)-g
	endif
	ifdef SMALL_BIN
		CFLAGS += $(space)-Os -s
	else ifndef NO_OPTIMIZE
		CFLAGS += $(space)-O2
	endif
endif

ifdef USE_GC
	CFLAG += $(space)-DUSE_GC
	LIBS += $(space)-lgc
endif
ifeq ($(OS), Windows_NT)
	CFLAGS += $(space)-mwindows -mconsole
	LIBS += $(space)-lws2_32 -lmysql -lpcre2-8-0 -limagehlp
else
	ifeq ($(shell uname), Linux)
		LDIRS += $(space)-L/usr/include/openssl
		LIBS += $(space)-lm -ldl -lc -lmysqlclient -lpcre2-8
	endif
	
	LIBS += $(space)-lpthread
endif

ifeq ($(strip $(ODIR)),)
	ODIR = .
endif

ifndef NO_OPTIMIZE
	ifdef SMALL_BIN
		CFLAGS += $(space)-ffast-math
	else
		CFLAGS += $(space)-march=native -fomit-frame-pointer
	endif
endif

EXEC_PATH = $(home)/../Misc/example/bin/Executable.exe

EXTRADEPS = VTableDeclarations.h\
			NovaClassData.h\
			NovaNativeInterface.h\
			InterfaceVTable.h\
			$(home)/include/Nova.h\
			$(home)/include/NovaExceptionHandling.h\
			$(stdlib)/nova/NativeObject.h\
			$(stdlib)/nova/NativeSystem.h\
			$(stdlib)/nova/database/NativeDBConnector.h\
			$(stdlib)/nova/gc/NativeGC.h\
			$(stdlib)/nova/io/NativeConsole.h\
			$(stdlib)/nova/io/NativeFile.h\
			$(stdlib)/nova/network/NativeClientSocket.h\
			$(stdlib)/nova/network/NativeSocket.h\
			$(stdlib)/nova/network/NativeServerSocket.h\
			$(stdlib)/nova/security/NativeMD5.h\
			$(stdlib)/nova/star/NativeWindow.h\
			$(stdlib)/nova/thread/NativeThread.h\
			$(stdlib)/nova/time/NativeDate.h\
			$(stdlib)/nova/time/NativeTime.h

EXTRAOBJ = VTableDeclarations.o\
			NovaClassData.o\
			NovaNativeInterface.o\
			$(home)/include/Nova.o\
			$(home)/include/NovaExceptionHandling.o\
			$(stdlib)/nova/NativeObject.o\
			$(stdlib)/nova/NativeSystem.o\
			$(stdlib)/nova/database/NativeDBConnector.o\
			$(stdlib)/nova/gc/NativeGC.o\
			$(stdlib)/nova/io/NativeConsole.o\
			$(stdlib)/nova/io/NativeFile.o\
			$(stdlib)/nova/network/NativeClientSocket.o\
			$(stdlib)/nova/network/NativeSocket.o\
			$(stdlib)/nova/network/NativeServerSocket.o\
			$(stdlib)/nova/security/NativeMD5.o\
			$(stdlib)/nova/star/NativeWindow.o\
			$(stdlib)/nova/thread/NativeThread.o\
			$(stdlib)/nova/time/NativeDate.o\
			$(stdlib)/nova/time/NativeTime.o

DEPS = $(patsubst %,%,$(NOVA_DEPS) $(EXTRADEPS))

NOBJ = $(patsubst %,$(ODIR)/%,$(NOVA_OBJ))
FOBJ = $(patsubst %,$(FODIR)/%,$(NOVA_OBJ))
QOBJ = $(patsubst %\,%,$(patsubst %,$(ODIR)/$(subst $(space),$(bslash)$(space),%),$(NOVA_OBJ)))
NOOBJ = $(EXTRAOBJ) $(NOBJ)
QOOBJ = $(patsubst %\,%,$(patsubst %,$(subst $(space),$(bslash)$(space),%),$(EXTRAOBJ))) $(QOBJ)
ALLOBJ = $(EXTRAOBJ) $(NOBJ)
QOGCH = $(patsubst %\,%,$(patsubst %,$(subst $(space),$(bslash)$(space),%),$(ALLOBJ:.o=.gch)))
#QOOBJ = $(subst $(slash),$(bslash),$(aA))
#QOGCH = $(subst $(slash),$(bslash),$(bB))
OBJ = $(subst :,$(colon),$(EXTRAOBJ)) $(FOBJ)
GENERATED_FILES = $(QOOBJ) $(QOGCH)

%.gch: %.h
	$(CC) $(CFLAGS) -c -o $@ $<

%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) -c -o $@ $< $(LDIRS) $(LIBS)

.PHONY: install link headers clean

install: $(ALLOBJ)
	@echo "Linking program"
	$(CC) $(CFLAGS) $^ -o $(EXEC_PATH) $(LDIRS) $(LIBS)

link:
	@echo "Linking program"
	$(CC) $(CFLAGS) $(ALLOBJ) -o $(EXEC_PATH) $(LDIRS) $(LIBS)

headers: $(OBJ:.o=.gch)
	echo done headers

clean:
#ifeq ($(OS), Windows_NT)
#	$(foreach f, $(GENERATED_FILES), echo $(f);)
#	$(shell for %%a in ($(GENERATED_FILES)) do if exist "%%a" del "%%a")
#	@echo "Deleting all *.o and *.gch files"
#	@del /S $(ODIR)/*.o $(ODIR)/*.gch
#else
	rm -f $(GENERATED_FILES)
#endif